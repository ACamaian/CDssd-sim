# Macro file for the visualization setting in the initialization phase 
# of the B1 example when running in interactive mode
#

# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 0 0
/vis/scene/add/scale   # Simple scale line
/vis/scene/add/axes    # Simple axes: x=red, y=green, z=blue.
/vis/scene/add/eventID # Drawn at end of event
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
# set camera
/vis/viewer/reset
/vis/viewer/set/hiddenEdge 0
#/vis/viewer/set/lightsThetaPhi 120 40
/vis/viewer/set/viewpointThetaPhi 115. 145.
#/vis/viewer/set/viewpointThetaPhi 90. 90.
/vis/viewer/zoom 1.0
#/vis/viewer/set/background 1 1 1 1
/vis/viewer/flush
#
# drawing style
#/vis/viewer/set/style surface
/vis/viewer/set/style wireframe
/vis/viewer/flush
#
# drawing the tracks
#/tracking/storeTrajectory 10
/vis/scene/endOfEventAction accumulate 10
#/vis/scene/endOfEventAction refresh
#/vis/viewer/set/autoRefresh 1
#
# create an empty scene and add the detector geometry to it
/vis/scene/add/trajectories
/vis/scene/add/hits
