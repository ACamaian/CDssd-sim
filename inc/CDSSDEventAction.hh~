/// \file DEMOEventAction.hh
/// \brief Definition of the B1EventAction class

#ifndef DEMOEventAction_h
#define DEMOEventAction_h 1

#include "G4UserEventAction.hh"
#include "G4SDManager.hh"
#include "globals.hh"

#include "DEMOGasGeantHit.hh"
#include "DEMODSSDGeantHit.hh"

class DEMORunAction;

/// Event action class
///

class DEMOEventAction : public G4UserEventAction
{
  G4String  drawFlag;
      
public:
  DEMOEventAction();
  ~DEMOEventAction() override;
  
  void BeginOfEventAction(const G4Event* event) override;
  void EndOfEventAction(const G4Event* event) override;
  
  G4double GetVertexZ0(){return vertex_z0;};
  void SetVertexZ0(G4double val){vertex_z0=val;};
  
  std::vector<G4int>& GetTIDvector(){return trackid;};
  std::vector<G4int>& GetPIDvector(){return parentid;};
  std::vector<G4int>& GetPDGvector(){return pdg;}

  std::vector<G4double>& GetXvector(){return xpos;};
  std::vector<G4double>& GetYvector(){return ypos;};
  std::vector<G4double>& GetZvector(){return zpos;};
  
  std::vector<G4double>& GetEdepvector(){return edeppos;};
  std::vector<G4double>& GetE0vector(){return e0pos;};

  std::vector<G4int>& GetTrackHit(){return track;};
  std::vector<G4int>& GetEventID(){return eventid;};
  std::vector<G4int>& GetPDGhit(){return pdg2;};
  std::vector<G4int>& GetVolumehit(){return volume;};
  std::vector<G4double>& GetE0hit(){return e02;};
  std::vector<G4double>& GetEtothit(){return etot_dep;};
  std::vector<G4int>& GetParenthit(){return parentid2;};

private:
  
  DEMOGasGeantHitsCollection* GetHitsCollectionGas(G4int hcID,    const G4Event* event) const;
  DEMODSSDGeantHitsCollection* GetHitsCollectionDssd(G4int hcID,    const G4Event* event) const;
  

  G4double vertex_z0;

  G4int fgasHCID=-1; 
  G4int fdssdHCID=-1;

  std::vector<G4int> eventid;

  std::vector<G4int> trackid;
  std::vector<G4int> parentid;
  std::vector<G4int> pdg;

  std::vector<G4double> xpos;
  std::vector<G4double> ypos;
  std::vector<G4double> zpos;
  std::vector<G4double> edeppos;
  std::vector<G4double> e0pos;

  
  std::vector<G4int> track;
  std::vector<G4double> etot_dep;
  std::vector<G4int> volume;
  std::vector<G4int> pdg2;
  std::vector<G4int> parentid2;
  std::vector<G4double> e02;
};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#endif

    
