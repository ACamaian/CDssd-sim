#ifndef DEMOGasDetectorConstruction_h
#define DEMOGasDetectorConstruction_h 1

#include "globals.hh"
#include "G4ThreeVector.hh"
#include "G4NistManager.hh"

class G4LogicalVolume;
class G4VPhysicalVolume;
class G4Material;
class DEMOGasDetectorMessenger;
class DEMODetectorConstruction;
class DEMOFieldSetup;

class DEMOGasDetectorConstruction {
private:
  G4Material* gasMaterial;            ///< Pointer to the gas material
 
  G4int NumberOfGasMix;               ///< Number of gases in the gas mix (maximum 10)
  G4String gasMixMaterial[10];        ///< List of gas materials
  G4double gasMixRatio[10];           ///< List of gas ratios in the mix

  G4double gasPressure;               ///< Gas pressure
  G4double gasTemperature;            ///< Gas temperature
  
  DEMOGasDetectorMessenger* gasMessenger;    ///< Pointer to the Messenger
  DEMODetectorConstruction* detConstruction; ///< Pointer to the global detector construction

  G4double gasBoxSizeX;
  G4double gasBoxSizeY;
  G4double gasBoxSizeZ;

  G4double gasBoxCenterX;
  G4double gasBoxCenterY;
  G4double gasBoxCenterZ;

  G4NistManager *nistman;

  G4LogicalVolume* gasLog;                   //pointer to logic gas

  G4VPhysicalVolume* ConstructGas(G4LogicalVolume*);

  DEMOFieldSetup* emField; ///< Pointer to the uniform em. field
  G4ThreeVector eField;           ///< Electric field vector


public:
  DEMOGasDetectorConstruction(DEMODetectorConstruction*);
  ~DEMOGasDetectorConstruction();

  G4VPhysicalVolume* Construct(G4LogicalVolume*);

  

  //void DefineGas ();
  void SetGasMaterial (G4String);
  void SetGasMixture(G4int val){NumberOfGasMix = val;}
  void SetGasMixMaterial(G4int GasNum, G4String GasMat, G4double GasRatio) {
    gasMixMaterial[GasNum-1]=GasMat;
    gasMixRatio[GasNum-1]=GasRatio;
  }
  void SetGasPressure(G4double val){gasPressure = val;}
  void SetGasTemperature(G4double val){gasTemperature = val;}
  
  G4Material* GetGasMaterial() {return gasMaterial;}
  G4double GetGasPressure(void){return gasPressure;}
  G4double GetGasTemperature(void){return gasTemperature;}

  G4LogicalVolume* GetLogicalVolume(){return gasLog;};
};
#endif
